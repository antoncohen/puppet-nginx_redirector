user <%= scope.lookupvar('nginx_redirector::params::nginx_user')%>;
worker_processes <%= scope.lookupvar('nginx_redirector::params::worker_processes')%>;
worker_rlimit_nofile <%= scope.lookupvar('nginx_redirector::params::worker_rlimit_nofile')%>;
pid /var/run/nginx.pid;

events {
    worker_connections <%= scope.lookupvar('nginx_redirector::params::worker_connections')%>;
    use epoll;
    multi_accept off;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 0;
    types_hash_max_size 2048;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '$request_method $server_protocol $host "$request_uri" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip off;

    ##
    # Redirection Servers
    ##

    server {
        listen <%= scope.lookupvar('nginx_redirector::params::nginx_ipv4')%>:80;
        <% if scope.lookupvar('nginx_redirector::params::nginx_ipv6') != :undef %>
        listen [<%= scope.lookupvar('nginx_redirector::params::nginx_ipv6')%>]:80 default_server ipv6only=on;
        <% end %>
        server_name  _;

        ##
        # Redirection Code
        ##

        # TODO: Switch to 301 redirect after testing is complete

        set $towww 1;

        if ($host ~* "www\.([\w-]*\.[\w-]*)" ) {
            set $towww 0;
            set $new_host $1;
            rewrite ^ $scheme://$new_host$request_uri? redirect; 
        }

        if ($towww) {
            rewrite ^ $scheme://www.$host$request_uri? redirect;
        }

        location / {
            root   /usr/share/nginx;
            deny all;
        }
    } # server
} # http
